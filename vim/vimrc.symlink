set nocompatible              " be iMproved, required

filetype off                  " required
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" General
  Plugin 'gmarik/Vundle.vim'
  Plugin 'kien/ctrlp.vim'
  Plugin 'bling/vim-airline'
  Plugin 'scrooloose/nerdtree'
  Plugin 'jistr/vim-nerdtree-tabs'
  Plugin 'flazz/vim-colorschemes'
  Plugin 'danro/rename.vim'
  Plugin 'Lokaltog/vim-easymotion'
  Plugin 'ryanss/vim-hackernews'

" General Programming
  Plugin 'scrooloose/syntastic'
  Plugin 'airblade/vim-gitgutter'
  Plugin 'kien/rainbow_parentheses.vim'
  Plugin 'tpope/vim-surround'
  Plugin 'tpope/vim-fugitive'
  Plugin 'MarcWeber/vim-addon-mw-utils'
  Plugin 'tomtom/tlib_vim'
  Plugin 'garbas/vim-snipmate'
  Plugin 'honza/vim-snippets'
  Plugin 'scrooloose/nerdcommenter'
  Plugin 'Valloric/YouCompleteMe' " Requires cmake

" Clojure
  Plugin 'guns/vim-clojure-static'
  Plugin 'tpope/vim-classpath'
  Plugin 'tpope/vim-fireplace'
  Plugin 'tpope/vim-leiningen'

" Go
  Plugin 'fatih/vim-go'
  Plugin 'nsf/gocode', {'rtp': 'vim/'}

" Javascript
  Plugin 'mustache/vim-mustache-handlebars'

" Markdown
  Plugin 'godlygeek/tabular'
  Plugin 'plasticboy/vim-markdown'

" Ruby & Rails
  Plugin 'vim-ruby/vim-ruby'
  Plugin 'tpope/vim-rails'

" Python
  Plugin 'klen/python-mode'

" Elixir
  Plugin 'elixir-lang/vim-elixir'

" HTML
  Plugin 'mattn/emmet-vim'
  Plugin 'othree/xml.vim'  

call vundle#end()
filetype plugin indent on

augroup myfiletypes
  " Stealing a lot from r00k
  " https://github.com/r00k/dotfiles/blob/master/vimrc
  
  " Clear old autcmds in group
  autocmd!

  " autoindet with two spaces, always expand tabs
  autocmd FileType ruby,eruby,yaml setlocal ai sw=2 sts=2 et
  autocmd FileType ruby,eruby,yaml setlocal path+=lib
  " Make ?s part of words
  autocmd FileType ruby,eruby,yaml setlocal iskeyword+=? 

  au BufRead,BufNewFile *.zsh-theme set filetype=zsh

augroup END

set nu
syntax enable

let mapleader = ","

" Tabs
set smartindent
set tabstop=2
set shiftwidth=2
set expandtab

" Turn on mouse compatibility
set mouse=a

" Remap moving around splits
nnoremap <C-H> <C-W><C-H>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>

" Allow Ctrl-HJKL to move around while in insert mode
inoremap <C-H> <Left>
inoremap <C-J> <Down>
inoremap <C-K> <Up>
inoremap <C-L> <Right>

" Better split resizing
nnoremap = <C-w>+
nnoremap - <C-w>-
nnoremap + <C-w>>
nnoremap _ <C-w><

nnoremap <leader>n :bn<CR>
nnoremap <leader>p :bp<CR>

" Move through line wraps propperly
map k gk
map j gj

" Save normally
map <C-s> <esc>:w<CR>:echo "Saved!"<CR>
imap <C-s> <esc>:w<CR>:echo "Saved!"<CR>a

vnoremap <Enter> <Esc>

set splitbelow
set splitright
set incsearch
set noswapfile
set autoread
set scrolloff=5
set shiftround

" Exit insert mode with jj
inoremap jj <ESC>

" allow backspacing over everything in insert mode
set backspace=indent,eol,start " http://stackoverflow.com/questions/3534028/mac-terminal-vim-will-only-use-backspace-when-at-the-end-of-a-line 

runtime macros/matchit.vim

" Ctrl-P
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'

" vim-airline
set laststatus=2
" Enable a buffer tabline
let g:airline#extensions#tabline#enabled = 1

" NERDTree
"
" Automaically open Nerdtree
" autocmd vimenter * NERDTree
map <C-n> :NERDTreeTabsToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" GitGutter
let g:gitgutter_sign_column_always = 1 " Always show sign column

" vim-markdown
let g:vim_markdown_folding_disabled=1

" Rainbow Parentheses
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]

let g:rbpt_max = 16

au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

map <F10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
      \ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
      \ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

" The Silver Searcher
if executable('ag')
    " Use ag over grep
    set grepprg=ag\ --nogroup\ --nocolor
    
    " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

    " ag is fast enough that CtrlP doesn't need to cache
    let g:ctrlp_use_caching = 0
endif

colorscheme thor

set t_Co=256
